-- Update the on_appointment_completed trigger to improve first-dose notification messaging
-- This addresses requirement 9: ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏ô‡πÑ‡∏Ç‡πâ‡∏Å‡∏£‡∏ì‡∏µ‡∏â‡∏µ‡∏î‡πÄ‡∏Ç‡πá‡∏°‡πÅ‡∏£‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏Ç‡πá‡∏°‡πÅ‡∏£‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏à‡πâ‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏â‡∏µ‡∏î

DROP TRIGGER IF EXISTS enqueue_appointment_notifications_trigger ON appointments;
DROP FUNCTION IF EXISTS enqueue_appointment_notifications();

CREATE OR REPLACE FUNCTION public.enqueue_appointment_notifications()
RETURNS trigger
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path TO 'public', 'pg_temp'
AS $function$
declare
  vname     text;
  alt_text  text;
  v_channel text;
  v_phone   text;
  v_line    text;
  dose_count integer := 0;
  is_first_dose boolean := false;
begin
  -- ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô‡∏à‡∏≤‡∏Å master
  select vs.vaccine_name
    into vname
  from public.vaccine_schedules vs
  where lower(vs.vaccine_type) = lower(coalesce(new.vaccine_type,''))
    and vs.active is true
  limit 1;

  -- Count completed doses for this patient and vaccine type to determine if this is first dose
  SELECT COUNT(*) INTO dose_count
  FROM public.appointments a2
  WHERE (a2.patient_id_number = NEW.patient_id_number OR a2.line_user_id = NEW.line_user_id)
  AND lower(a2.vaccine_type) = lower(NEW.vaccine_type)
  AND a2.status = 'completed'
  AND a2.appointment_date <= NEW.appointment_date;

  is_first_dose := (dose_count = 1);

  -- Create appropriate message based on whether this is first dose or follow-up appointment
  if is_first_dose then
    alt_text := '‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏â‡∏µ‡∏î‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô‡πÄ‡∏Ç‡πá‡∏°‡πÅ‡∏£‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô' || chr(10) ||
                '‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô: ' || coalesce(vname, new.vaccine_type, '‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô') || chr(10) ||
                '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ' || to_char(new.appointment_date, 'DD Mon YYYY') ||
                coalesce(' ‡πÄ‡∏ß‡∏•‡∏≤ '||to_char(new.appointment_time, 'HH24:MI'), '') || chr(10) ||
                'üìç ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡πÇ‡∏Æ‡∏°' || chr(10) || chr(10) ||
                '‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏î‡πÄ‡∏Ç‡πá‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ';
  else
    alt_text := 'üìÖ ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏â‡∏µ‡∏î‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ' || chr(10) ||
                '‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô: ' || coalesce(vname, new.vaccine_type, '‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô') || chr(10) ||
                '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ' || to_char(new.appointment_date, 'DD Mon YYYY') ||
                coalesce(' ‡πÄ‡∏ß‡∏•‡∏≤ '||to_char(new.appointment_time, 'HH24:MI'), '') || chr(10) ||
                'üìç ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡πÇ‡∏Æ‡∏°';
  end if;

  -- Fallback: ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ BEFORE ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡∏î‡∏π‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö notification
  if coalesce(new.line_user_id,'') = '' or coalesce(new.patient_phone,'') = '' then
    select pr.phone, pr.line_user_id
      into v_phone, v_line
    from public.patient_registrations pr
    where (pr.registration_id = new.patient_id_number)
       or (new.patient_phone is not null and pr.phone = new.patient_phone)
       or (new.line_user_id  is not null and pr.line_user_id = new.line_user_id)
       or (new.patient_name  is not null and pr.full_name ilike new.patient_name)
    limit 1;
  end if;

  -- ‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏´‡∏ô
  if coalesce(new.line_user_id, v_line, '') <> '' then
    v_channel := 'line';

    insert into public.notification_jobs (
      idempotency_key, kind, channel, line_user_id, appointment_id, schedule_at, payload
    )
    values (
      coalesce(new.line_user_id, v_line) || '|' || new.appointment_id || '|confirm',
      case when is_first_dose then 'first_dose_complete' else 'confirm' end,
      v_channel,
      coalesce(new.line_user_id, v_line),
      new.appointment_id,
      now() + interval '1 minute',
      jsonb_build_object(
        'userId', coalesce(new.line_user_id, v_line),
        'type', 'template',
        'message', alt_text,
        'isFirstDose', is_first_dose,
        'templateData', jsonb_build_object(
          'patientName', coalesce(new.patient_name,'‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢'),
          'vaccineName', coalesce(vname, new.vaccine_type, '‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô'),
          'vaccineType', new.vaccine_type,
          'appointmentDate', new.appointment_date,
          'appointmentTime', new.appointment_time,
          'doseNumber', dose_count,
          'isFirstDose', is_first_dose,
          'detailUrl', '<<PUT-DETAIL-URL-HERE>>',
          'mapQuery',  '‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡πÇ‡∏Æ‡∏°'
        )
      )
    )
    on conflict (idempotency_key) do nothing;

  elsif coalesce(new.patient_phone, v_phone, '') <> '' then
    -- ‡πÑ‡∏°‡πà‡∏°‡∏µ LINE ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡πÄ‡∏ö‡∏≠‡∏£‡πå: ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞ "‡∏Ñ‡∏¥‡∏ß SMS" ‡∏´‡∏£‡∏∑‡∏≠ "‡∏Ç‡πâ‡∏≤‡∏°" ‡∏Å‡πá‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ
    v_channel := 'sms';

    insert into public.notification_jobs (
      idempotency_key, kind, channel, line_user_id, appointment_id, schedule_at, payload
    )
    values (
      coalesce(new.patient_phone, v_phone) || '|' || new.appointment_id || '|confirm',
      case when is_first_dose then 'first_dose_complete' else 'confirm' end,
      v_channel,
      null,
      new.appointment_id,
      now() + interval '1 minute',
      jsonb_build_object(
        'phone', coalesce(new.patient_phone, v_phone),
        'message', alt_text,
        'patientName', coalesce(new.patient_name,'‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢'),
        'isFirstDose', is_first_dose,
        'doseNumber', dose_count
      )
    )
    on conflict (idempotency_key) do nothing;
  else
    -- ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏≤‡∏á‡πÑ‡∏´‡∏ô ‚Üí ‡∏Ç‡πâ‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô channel='none'
    insert into public.notification_jobs (
      idempotency_key, kind, channel, line_user_id, appointment_id, schedule_at, payload
    ) values (
      new.appointment_id || '|none|confirm',
      case when is_first_dose then 'first_dose_complete' else 'confirm' end,
      'none',
      null,
      new.appointment_id,
      now(),
      jsonb_build_object('reason','no-contact-info', 'isFirstDose', is_first_dose)
    )
    on conflict (idempotency_key) do nothing;
  end if;

  return new;
end $function$;

-- Recreate the trigger
CREATE TRIGGER enqueue_appointment_notifications_trigger
    AFTER INSERT OR UPDATE ON appointments
    FOR EACH ROW
    EXECUTE FUNCTION enqueue_appointment_notifications();